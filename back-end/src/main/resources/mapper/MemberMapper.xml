<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="org.spring.springboot.domain.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="family" jdbcType="VARCHAR" property="family" />
    <result column="familyid" jdbcType="INTEGER" property="familyid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="father" jdbcType="VARCHAR" property="father" />
    <result column="fatherid" jdbcType="INTEGER" property="fatherid" />
    <result column="mother" jdbcType="VARCHAR" property="mother" />
    <result column="motherid" jdbcType="INTEGER" property="motherid" />
    <result column="spouses" jdbcType="VARCHAR" property="spouses" />
    <result column="spousesid" jdbcType="INTEGER" property="spousesid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, avatar, family, familyid, name, gender, birthday, father, fatherid, mother, motherid, 
    spouses, spousesid
  </sql>
  <select id="selectByExample" parameterType="org.spring.springboot.domain.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.spring.springboot.domain.MemberExample">
    delete from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.spring.springboot.domain.Member">
    insert into t_member (id, avatar, family, 
      familyid, name, gender, 
      birthday, father, fatherid, 
      mother, motherid, spouses, 
      spousesid)
    values (#{id,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{family,jdbcType=VARCHAR}, 
      #{familyid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=VARCHAR}, #{father,jdbcType=VARCHAR}, #{fatherid,jdbcType=INTEGER}, 
      #{mother,jdbcType=VARCHAR}, #{motherid,jdbcType=INTEGER}, #{spouses,jdbcType=VARCHAR}, 
      #{spousesid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.spring.springboot.domain.Member">
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="family != null">
        family,
      </if>
      <if test="familyid != null">
        familyid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="father != null">
        father,
      </if>
      <if test="fatherid != null">
        fatherid,
      </if>
      <if test="mother != null">
        mother,
      </if>
      <if test="motherid != null">
        motherid,
      </if>
      <if test="spouses != null">
        spouses,
      </if>
      <if test="spousesid != null">
        spousesid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="family != null">
        #{family,jdbcType=VARCHAR},
      </if>
      <if test="familyid != null">
        #{familyid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="father != null">
        #{father,jdbcType=VARCHAR},
      </if>
      <if test="fatherid != null">
        #{fatherid,jdbcType=INTEGER},
      </if>
      <if test="mother != null">
        #{mother,jdbcType=VARCHAR},
      </if>
      <if test="motherid != null">
        #{motherid,jdbcType=INTEGER},
      </if>
      <if test="spouses != null">
        #{spouses,jdbcType=VARCHAR},
      </if>
      <if test="spousesid != null">
        #{spousesid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.spring.springboot.domain.MemberExample" resultType="java.lang.Long">
    select count(*) from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.family != null">
        family = #{record.family,jdbcType=VARCHAR},
      </if>
      <if test="record.familyid != null">
        familyid = #{record.familyid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.father != null">
        father = #{record.father,jdbcType=VARCHAR},
      </if>
      <if test="record.fatherid != null">
        fatherid = #{record.fatherid,jdbcType=INTEGER},
      </if>
      <if test="record.mother != null">
        mother = #{record.mother,jdbcType=VARCHAR},
      </if>
      <if test="record.motherid != null">
        motherid = #{record.motherid,jdbcType=INTEGER},
      </if>
      <if test="record.spouses != null">
        spouses = #{record.spouses,jdbcType=VARCHAR},
      </if>
      <if test="record.spousesid != null">
        spousesid = #{record.spousesid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_member
    set id = #{record.id,jdbcType=INTEGER},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      family = #{record.family,jdbcType=VARCHAR},
      familyid = #{record.familyid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      father = #{record.father,jdbcType=VARCHAR},
      fatherid = #{record.fatherid,jdbcType=INTEGER},
      mother = #{record.mother,jdbcType=VARCHAR},
      motherid = #{record.motherid,jdbcType=INTEGER},
      spouses = #{record.spouses,jdbcType=VARCHAR},
      spousesid = #{record.spousesid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.domain.Member">
    update t_member
    <set>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="family != null">
        family = #{family,jdbcType=VARCHAR},
      </if>
      <if test="familyid != null">
        familyid = #{familyid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="father != null">
        father = #{father,jdbcType=VARCHAR},
      </if>
      <if test="fatherid != null">
        fatherid = #{fatherid,jdbcType=INTEGER},
      </if>
      <if test="mother != null">
        mother = #{mother,jdbcType=VARCHAR},
      </if>
      <if test="motherid != null">
        motherid = #{motherid,jdbcType=INTEGER},
      </if>
      <if test="spouses != null">
        spouses = #{spouses,jdbcType=VARCHAR},
      </if>
      <if test="spousesid != null">
        spousesid = #{spousesid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.springboot.domain.Member">
    update t_member
    set avatar = #{avatar,jdbcType=VARCHAR},
      family = #{family,jdbcType=VARCHAR},
      familyid = #{familyid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      father = #{father,jdbcType=VARCHAR},
      fatherid = #{fatherid,jdbcType=INTEGER},
      mother = #{mother,jdbcType=VARCHAR},
      motherid = #{motherid,jdbcType=INTEGER},
      spouses = #{spouses,jdbcType=VARCHAR},
      spousesid = #{spousesid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>